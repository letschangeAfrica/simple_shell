#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#define BUFFER_SIZE 1024
#define MAX_ARGS 10
int main(void)
{
char buffer[BUFFER_SIZE];
char prompt[] = "simple_shell> ";
int bytes_read;
while (1)
{
printf("%s", prompt);
bytes_read = read(STDIN_FILENO, buffer, BUFFER_SIZE);
if (bytes_read == 0)
{
printf("\n");
break;
}
if (bytes_read < 0)
{
printf("\n");
break;
}
if (bytes_read < 0)
{
perror("Error reading command");
continue;
}
buffer[bytes_read - 1] = '\0';
char *args[MAX_ARGS];
char *token = strtok(buffer, " ");
int arg_count = 0;
while (token != NULL && arg_count < MAX_ARGS - 1)
{
args[arg_count] = token;
arg_count++;
token = strtok(NULL, " ");
}
args[arg_count] = NULL;
pid_t pid = fork();
if (pid < 0)
{
perror("Error forking process");
continue;
}
if (pid == 0)
{
execvp(args[0], args);
perror("Error executing command");
exit(EXIT_FAILURE);
}
else
{
wait(NULL);
}
}
return (0);
}
